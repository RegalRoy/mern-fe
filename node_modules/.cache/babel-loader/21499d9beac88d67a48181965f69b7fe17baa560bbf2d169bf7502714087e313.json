{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12368\\\\OneDrive\\\\Documents\\\\Douglas College\\\\S2023\\\\CSIS 3380 FSWD JS\\\\GroupProject\\\\GIT_projects\\\\TESTING_GIT_PROJ_11072023\\\\mern-fe\\\\src\\\\components\\\\ViewAvailableDates.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport UserService from \"../services/user.service\";\nimport DateCard from \"./DateCard\";\nimport AuthService from \"../services/auth.service\";\nimport DogService from \"../services/dog.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetDate = () => {\n  _s();\n  const [content, setContent] = useState([]);\n  const [matchedDates, setMatchDates] = useState([]);\n  const currentUser = AuthService.getCurrentUser();\n  useEffect(() => {\n    // UserService.GetDate().then(\n    //     (response) => {\n    //         setContent(response.data);\n    //         // console.log(content)\n    //     },\n    //     (error) => {\n    //         const _content =\n    //             (error.response &&\n    //                 error.response.data &&\n    //                 error.response.data.message) ||\n    //             error.message ||\n    //             error.toString();\n\n    //         setContent(_content);\n    //     }\n    // );\n    getMatchDate();\n  }, []);\n  const registerToPlaydate = id => {\n    let pickedDate;\n    UserService.ViewDate(id).then(r => {\n      pickedDate = r.data;\n      if (pickedDate.participants.includes(currentUser.username)) {} else {\n        pickedDate.participants.push(currentUser.username);\n        UserService.EditDate(id, pickedDate);\n      }\n    });\n    // console.log(pickedDate);\n  };\n\n  const UnregisterToPlaydate = id => {\n    let pickedDate2;\n    UserService.ViewDate(id).then(r => {\n      pickedDate2 = r.data;\n      let newArr = pickedDate2.participants.filter(e => e !== currentUser.username);\n      pickedDate2.participants = newArr;\n      UserService.EditDate(id, pickedDate2);\n    });\n  };\n  const getMatchDate = () => {\n    UserService.getUserBoard().then(r => {\n      let allDogs = [];\n      let dogsOfOwners = [];\n      allDogs = r.data;\n      dogsOfOwners = allDogs.filter(dog => dog.ownerId == currentUser.id);\n      console.log(\"no of dogs of the owner \" + dogsOfOwners.length);\n      dogsOfOwners.map(dog => console.log(dog));\n      dogsOfOwners.map(dog => {\n        UserService.GetDate().then(re => {\n          let allDates = [];\n          allDates = re.data;\n          console.log(\"Len of date array is \" + allDates.length);\n          allDates.map(date => console.log(date));\n          allDates.map(date => {\n            if (date.dogRestrictions.includes(dog.dogBreed) && date.dogRestrictions.includes(dog.dogSize) && date.dogRestrictions.includes(dog.dogTemperament)) {\n              let datematchedArr = [];\n              datematchedArr.push(date);\n              setMatchDates(datematchedArr);\n              console.log(\"date to be se is \" + date.dateAndTime);\n              return;\n            } else {\n              setContent([]);\n              console.log(\"no dates match\");\n            }\n          });\n        });\n      });\n    });\n  };\n  const dateList = matchedDates.map((dog, k) => /*#__PURE__*/_jsxDEV(DateCard, {\n    dog: dog,\n    registerToPlaydate: registerToPlaydate,\n    UnregisterToPlaydate: UnregisterToPlaydate,\n    participants: dog.participants\n  }, k, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 51\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your date List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: dateList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(GetDate, \"ZcvASlTizbC+IwnMje9mM0iTQV8=\");\n_c = GetDate;\nexport default GetDate;\nvar _c;\n$RefreshReg$(_c, \"GetDate\");","map":{"version":3,"names":["React","useState","useEffect","UserService","DateCard","AuthService","DogService","jsxDEV","_jsxDEV","GetDate","_s","content","setContent","matchedDates","setMatchDates","currentUser","getCurrentUser","getMatchDate","registerToPlaydate","id","pickedDate","ViewDate","then","r","data","participants","includes","username","push","EditDate","UnregisterToPlaydate","pickedDate2","newArr","filter","e","getUserBoard","allDogs","dogsOfOwners","dog","ownerId","console","log","length","map","re","allDates","date","dogRestrictions","dogBreed","dogSize","dogTemperament","datematchedArr","dateAndTime","dateList","k","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["C:/Users/12368/OneDrive/Documents/Douglas College/S2023/CSIS 3380 FSWD JS/GroupProject/GIT_projects/TESTING_GIT_PROJ_11072023/mern-fe/src/components/ViewAvailableDates.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport UserService from \"../services/user.service\";\r\nimport DateCard from \"./DateCard\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport DogService from \"../services/dog.service\";\r\n\r\nconst GetDate = () => {\r\n    const [content, setContent] = useState([]);\r\n    const [matchedDates, setMatchDates] = useState([])\r\n    const currentUser = AuthService.getCurrentUser();\r\n    useEffect(() => {\r\n        // UserService.GetDate().then(\r\n        //     (response) => {\r\n        //         setContent(response.data);\r\n        //         // console.log(content)\r\n        //     },\r\n        //     (error) => {\r\n        //         const _content =\r\n        //             (error.response &&\r\n        //                 error.response.data &&\r\n        //                 error.response.data.message) ||\r\n        //             error.message ||\r\n        //             error.toString();\r\n\r\n        //         setContent(_content);\r\n        //     }\r\n        // );\r\n        getMatchDate()\r\n    }, [])\r\n\r\n    const registerToPlaydate = (id) => {\r\n        let pickedDate\r\n        UserService.ViewDate(id).then((r) => {\r\n            pickedDate = r.data;\r\n            if (pickedDate.participants.includes(currentUser.username)) {\r\n\r\n            } else {\r\n                pickedDate.participants.push(currentUser.username);\r\n                UserService.EditDate(id, pickedDate);\r\n            }\r\n\r\n\r\n        })\r\n        // console.log(pickedDate);\r\n    }\r\n\r\n    const UnregisterToPlaydate = (id) => {\r\n        let pickedDate2\r\n        UserService.ViewDate(id).then((r) => {\r\n            pickedDate2 = r.data;\r\n            let newArr = pickedDate2.participants.filter(e => e !== currentUser.username);\r\n            pickedDate2.participants = newArr;\r\n            UserService.EditDate(id, pickedDate2);\r\n\r\n        })\r\n    }\r\n\r\n    const getMatchDate = () => {\r\n        UserService.getUserBoard().then((r) => {\r\n            let allDogs = [];\r\n            let dogsOfOwners = [];\r\n            allDogs = r.data;\r\n            dogsOfOwners = allDogs.filter(dog => dog.ownerId == currentUser.id)\r\n\r\n            console.log(\"no of dogs of the owner \" + dogsOfOwners.length)\r\n            dogsOfOwners.map(dog=>console.log(dog))\r\n            dogsOfOwners.map(dog => {\r\n                UserService.GetDate().then((re) => {\r\n                    let allDates = [];\r\n                    allDates = re.data;\r\n                    console.log(\"Len of date array is \"+allDates.length)\r\n                    allDates.map(date=>console.log(date));\r\n                    allDates.map(date => {\r\n                        if (date.dogRestrictions.includes(dog.dogBreed) && date.dogRestrictions.includes(dog.dogSize) && date.dogRestrictions.includes(dog.dogTemperament)) {\r\n                            let datematchedArr=[];\r\n                            datematchedArr.push(date);\r\n                            setMatchDates(datematchedArr);\r\n                            console.log(\"date to be se is \" + date.dateAndTime)\r\n                            return;\r\n                        } else {\r\n                            setContent([])\r\n                            console.log(\"no dates match\")\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n\r\n    const dateList = matchedDates.map((dog, k) => <DateCard dog={dog} key={k} registerToPlaydate={registerToPlaydate} UnregisterToPlaydate={UnregisterToPlaydate} participants={dog.participants} />)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <header className=\"jumbotron\">\r\n                <h3>Your date List</h3>\r\n                <div className='list'>{dateList}</div>\r\n\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GetDate;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}